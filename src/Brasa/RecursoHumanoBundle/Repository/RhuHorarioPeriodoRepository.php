<?php

namespace Brasa\RecursoHumanoBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RhuHorarioPeriodoRepository extends EntityRepository {
    
    public function listaDQL($strNombre = "") {        
        $dql   = "SELECT c FROM BrasaRecursoHumanoBundle:RhuCargo c WHERE c.codigoCargoPk <> 0";
        if($strNombre != "" ) {
            $dql .= " AND c.nombre LIKE '%" . $strNombre . "%'";
        }
        $dql .= " ORDER BY c.codigoCargoPk";
        return $dql;
    }
    
    public function generar($codigoHorarioPeriodo) {
        $em = $this->getEntityManager(); 
        $strMensaje = "";
        $intDiaSemana = "";
        
        $CodigoHorarioEmpleado = "";
        $arHorario = new \Brasa\RecursoHumanoBundle\Entity\RhuHorario();
        $arTurno = new \Brasa\RecursoHumanoBundle\Entity\RhuTurno();
        $arHorarioPeriodo = new \Brasa\RecursoHumanoBundle\Entity\RhuHorarioPeriodo();
        $arHorarioPeriodo = $em->getRepository('BrasaRecursoHumanoBundle:RhuHorarioPeriodo')->find($codigoHorarioPeriodo);
        
        $arHorariosPeriodos = $em->getRepository('BrasaRecursoHumanoBundle:RhuHorarioPeriodo')->findOneBy(array('estadoGenerado' => 1, 'estadoCerrado' => 0));
        if ($arHorariosPeriodos == null){
            $dql   = "SELECT c FROM BrasaRecursoHumanoBundle:RhuContrato c "
                    . "WHERE c.codigoContratoPk <> 0 "
                    . " AND (c.fechaHasta <= '" . $arHorarioPeriodo->getPeriodo()->format('Y-m-d') . "' "
                    . " OR c.indefinido = 1)";            
            $arContratos = new \Brasa\RecursoHumanoBundle\Entity\RhuContrato();
            $query = $em->createQuery($dql);
            $arContratos = $query->getResult();
            foreach ($arContratos as $arContrato) {
                $arHorarioAcceso = new \Brasa\RecursoHumanoBundle\Entity\RhuHorarioAcceso();
                $arHorarioAcceso->setEmpleadoRel($arContrato->getEmpleadoRel());
                $arHorarioAcceso->setFechaEntrada($arHorarioPeriodo->getPeriodo());
                $intDiaSemana = $arHorarioPeriodo->getPeriodo()->format('N');
                $CodigoHorarioEmpleado = $arContrato->getEmpleadoRel()->getCodigoHorarioFk();
                $arHorario = $em->getRepository('BrasaRecursoHumanoBundle:RhuHorario')->find($CodigoHorarioEmpleado);
                $em->persist($arHorarioAcceso);
                if ($intDiaSemana == 1) {
                    $arTurno = $em->getRepository('BrasaRecursoHumanoBundle:RhuTurno')->find($arHorario->getLunes());
                    $arHorarioAcceso->setTurnoRel($arTurno);
                    $arHorarioAcceso->setHoraEntradaTurno($arTurno->getHoraDesde());
                    $arHorarioAcceso->setHoraSalidaTurno($arTurno->getHoraHasta());
                    $em->persist($arHorarioAcceso);
                }
                if ($intDiaSemana == 2) {
                    $arTurno = $em->getRepository('BrasaRecursoHumanoBundle:RhuTurno')->find($arHorario->getMartes());
                    $arHorarioAcceso->setTurnoRel($arTurno);
                    $arHorarioAcceso->setHoraEntradaTurno($arTurno->getHoraDesde());
                    $arHorarioAcceso->setHoraSalidaTurno($arTurno->getHoraHasta());
                    $em->persist($arHorarioAcceso);
                }
                if ($intDiaSemana == 3) {
                    $arTurno = $em->getRepository('BrasaRecursoHumanoBundle:RhuTurno')->find($arHorario->getMiercoles());
                    $arHorarioAcceso->setTurnoRel($arTurno);
                    $arHorarioAcceso->setHoraEntradaTurno($arTurno->getHoraDesde());
                    $arHorarioAcceso->setHoraSalidaTurno($arTurno->getHoraHasta());
                    $em->persist($arHorarioAcceso);
                }
                if ($intDiaSemana == 4) {
                    $arTurno = $em->getRepository('BrasaRecursoHumanoBundle:RhuTurno')->find($arHorario->getJueves());
                    $arHorarioAcceso->setTurnoRel($arTurno);
                    $arHorarioAcceso->setHoraEntradaTurno($arTurno->getHoraDesde());
                    $arHorarioAcceso->setHoraSalidaTurno($arTurno->getHoraHasta());
                    $em->persist($arHorarioAcceso);
                }
                if ($intDiaSemana == 5) {
                    $arTurno = $em->getRepository('BrasaRecursoHumanoBundle:RhuTurno')->find($arHorario->getViernes());
                    $arHorarioAcceso->setTurnoRel($arTurno);
                    $arHorarioAcceso->setHoraEntradaTurno($arTurno->getHoraDesde());
                    $arHorarioAcceso->setHoraSalidaTurno($arTurno->getHoraHasta());
                    $em->persist($arHorarioAcceso);
                }
                if ($intDiaSemana == 6) {
                    $arTurno = $em->getRepository('BrasaRecursoHumanoBundle:RhuTurno')->find($arHorario->getSabado());
                    $arHorarioAcceso->setTurnoRel($arTurno);
                    $arHorarioAcceso->setHoraEntradaTurno($arTurno->getHoraDesde());
                    $arHorarioAcceso->setHoraSalidaTurno($arTurno->getHoraHasta());
                    $em->persist($arHorarioAcceso);
                }
                if ($intDiaSemana == 7) {
                    $arTurno = $em->getRepository('BrasaRecursoHumanoBundle:RhuTurno')->find($arHorario->getDomingo());
                    $arHorarioAcceso->setTurnoRel($arTurno);
                    $arHorarioAcceso->setHoraEntradaTurno($arTurno->getHoraDesde());
                    $arHorarioAcceso->setHoraSalidaTurno($arTurno->getHoraHasta());
                    $em->persist($arHorarioAcceso);
                }
                
                
            }
            $arHorarioPeriodo->setEstadoGenerado(1);
            $em->persist($arHorarioPeriodo);
            $em->flush();
        } else {
            $strMensaje = "Hay periodos pendientes por cerrar";
        }
        
        
        return $strMensaje;    
    }   
    
    public function cerrar($codigoHorarioPeriodo) {
        $em = $this->getEntityManager(); 
        $strMensaje = "";
        $arHorarioPeriodo = new \Brasa\RecursoHumanoBundle\Entity\RhuHorarioPeriodo();
        $arHorarioPeriodo = $em->getRepository('BrasaRecursoHumanoBundle:RhuHorarioPeriodo')->find($codigoHorarioPeriodo);
        $arHorarioPeriodo->setEstadoCerrado(1);
        $em->persist($arHorarioPeriodo);
        $em->flush();
        return $strMensaje;    
    } 
}