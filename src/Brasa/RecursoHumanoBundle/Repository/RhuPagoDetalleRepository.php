<?php

namespace Brasa\RecursoHumanoBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RhuPagoDetalleRepository extends EntityRepository {
    /*public function pagosDetallesProgramacionPago($codigoProgramacionPago) {
        $em = $this->getEntityManager();
        $dql   = "SELECT pd FROM BrasaRecursoHumanoBundle:RhuPagoDetalle pd JOIN pd.pagoRel p "
                . "WHERE p.codigoProgramacionPagoFk = " . $codigoProgramacionPago;
        $query = $em->createQuery($dql);
        $arPagosDetalles = $query->getResult();                
        return $arPagosDetalles;
    }*/
    public function devuelveRetencionFuenteEmpleadoFecha($codigoEmpleado, $strFechaCertificado) {
        $em = $this->getEntityManager();
        $dql   = "SELECT SUM(pd.vrPago) as Retencion FROM BrasaRecursoHumanoBundle:RhuPagoDetalle pd JOIN pd.pagoRel p "
                . "WHERE p.codigoEmpleadoFk = " . $codigoEmpleado . " "
                . "AND pd.codigoPagoConceptoFk = 26"
                . "AND p.fechaDesde like '%" . $strFechaCertificado . "%' ";
        $query = $em->createQuery($dql);
        $douRetencion = $query->getSingleScalarResult();
        return $douRetencion;
    }
    public function devuelveOtrosIngresosEmpleadoFecha($codigoEmpleado, $strFechaCertificado) {
        $em = $this->getEntityManager();
        $dql   = "SELECT SUM(pd.vrPago) as Retencion FROM BrasaRecursoHumanoBundle:RhuPagoDetalle pd JOIN pd.pagoRel p "
                . "WHERE p.codigoEmpleadoFk = " . $codigoEmpleado . " "
                . "AND p.fechaDesde like '%" . $strFechaCertificado . "%' "
                . "AND pd.codigoPagoConceptoFk = 5"
                . "OR pd.codigoPagoConceptoFk = 15"
                . "OR pd.codigoPagoConceptoFk = 17"
                . "OR pd.codigoPagoConceptoFk = 19"
                . "OR pd.codigoPagoConceptoFk = 22";
                
                
        $query = $em->createQuery($dql);
        $douOtrosIngresos = $query->getSingleScalarResult();
        return $douOtrosIngresos;
    }
    
}