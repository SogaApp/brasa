<?php

namespace Brasa\RecursoHumanoBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RhuSsoPeriodoDetalleRepository extends EntityRepository {
    
    public function listaDQL($codigoPeriodo) {                    
            $dql   = "SELECT pd FROM BrasaRecursoHumanoBundle:RhuSsoPeriodoDetalle pd WHERE pd.codigoPeriodoFk = " . $codigoPeriodo;
            return $dql;
        } 
    
    public function generar($codigoPeriodoDetalle) {
        $em = $this->getEntityManager();        
        $arPeriodoDetalle = new \Brasa\RecursoHumanoBundle\Entity\RhuSsoPeriodoDetalle();
        $arPeriodoDetalle = $em->getRepository('BrasaRecursoHumanoBundle:RhuSsoPeriodoDetalle')->find($codigoPeriodoDetalle);        
        $em->getRepository('BrasaRecursoHumanoBundle:RhuSsoPeriodoEmpleado')->actualizar($codigoPeriodoDetalle);
        $i = 1;
        $arPeriodoEmpleados = new \Brasa\RecursoHumanoBundle\Entity\RhuSsoPeriodoEmpleado();
        $arPeriodoEmpleados = $em->getRepository('BrasaRecursoHumanoBundle:RhuSsoPeriodoEmpleado')->findBy(array('codigoPeriodoFk' => $arPeriodoDetalle->getCodigoPeriodoFk(), 'codigoSucursalFk' => $arPeriodoDetalle->getCodigoSucursalFk()));                
        foreach ($arPeriodoEmpleados as $arPeriodoEmpleado) {
            $arEmpleado = new \Brasa\RecursoHumanoBundle\Entity\RhuEmpleado();
            $arEmpleado = $em->getRepository('BrasaRecursoHumanoBundle:RhuEmpleado')->find($arPeriodoEmpleado->getCodigoEmpleadoFk());        
            $arAporte = new \Brasa\RecursoHumanoBundle\Entity\RhuSsoAporte();
            $arAporte->setSsoPeriodoRel($arPeriodoEmpleado->getSsoPeriodoRel());
            $arAporte->setSsoPeriodoDetalleRel($arPeriodoDetalle);
            $arAporte->setSsoSucursalRel($arPeriodoEmpleado->getSsoSucursalRel());
            $arAporte->setEmpleadoRel($arPeriodoEmpleado->getEmpleadoRel());
            $arAporte->setContratoRel($arPeriodoEmpleado->getContratoRel());
            $arAporte->setTipoRegistro(2);
            $arAporte->setSecuencia($i);
            $arAporte->setTipoDocumento($arEmpleado->getTipoIdentificacionRel()->getCodigoInterface());
            $arAporte->setTipoCotizante($arEmpleado->getCodigoTipoCotizanteFk());
            $arAporte->setSubtipoCotizante($arEmpleado->getCodigoSubtipoCotizanteFk());
            $arAporte->setExtranjeroNoObligadoCotizarPension(' ');
            $arAporte->setColombianoResidenteExterior(' ');
            $arAporte->setCodigoDepartamentoUbicacionlaboral($arPeriodoEmpleado->getContratoRel()->getCentroCostoRel()->getCiudadRel()->getDepartamentoRel()->getCodigoDane());
            $arAporte->setCodigoMunicipioUbicacionlaboral($arPeriodoEmpleado->getContratoRel()->getCentroCostoRel()->getCiudadRel()->getCodigoDane());
            $arAporte->setPrimerNombre($arEmpleado->getNombre1());
            $arAporte->setSegundoNombre($arEmpleado->getNombre2());
            $arAporte->setPrimerApellido($arEmpleado->getApellido1());
            $arAporte->setSegundoApellido($arEmpleado->getApellido2());
            $arAporte->setIngreso($arPeriodoEmpleado->getIngreso());
            $arAporte->setRetiro($arPeriodoEmpleado->getRetiro());
            if($arPeriodoEmpleado->getVrSuplementario() > 0) {
                $arAporte->setVariacionTransitoriaSalario('X');
            }
            
            $em->persist($arAporte);
            $i++;
        } 
        $arPeriodoDetalle->setEstadoGenerado(1);
        $em->persist($arPeriodoDetalle);
        $em->flush();
        return true;
    }
    
    public function desgenerar($codigoPeriodoDetalle) {
        $em = $this->getEntityManager();
        $strSql = "DELETE FROM rhu_sso_aporte WHERE codigo_periodo_detalle_fk = " . $codigoPeriodoDetalle;
        $em->getConnection()->executeQuery($strSql); 
        $arPeriodoDetalle = new \Brasa\RecursoHumanoBundle\Entity\RhuSsoPeriodoDetalle();
        $arPeriodoDetalle = $em->getRepository('BrasaRecursoHumanoBundle:RhuSsoPeriodoDetalle')->find($codigoPeriodoDetalle);
        $arPeriodoDetalle->setEstadoGenerado(0);
        $em->persist($arPeriodoDetalle);
        $em->flush();
        return true;
    }    
    
}