<?php

namespace Brasa\RecursoHumanoBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RhuHorarioAccesoRepository extends EntityRepository {
    
    public function RegistroHoy($strFechaHoy = "") {
        
        $em = $this->getEntityManager();
        $dql   = "SELECT ha FROM BrasaRecursoHumanoBundle:RhuHorarioAcceso ha WHERE ha.codigoHorarioAccesoPk <> 0 AND ha.estadoSalida = 0";   
        if ($strFechaHoy != ""){
            $dql .= " AND ha.fechaEntrada >= '". $strFechaHoy . " 00:00:00' AND ha.fechaEntrada <= '" . $strFechaHoy . " 23:59:59' ";
        }
        return $dql;
    }
    
    public function RegistroEntrada($strFechaHoy = "", $strEmpleado= "") {
        
        $em = $this->getEntityManager();
        $dql   = "SELECT ha FROM BrasaRecursoHumanoBundle:RhuHorarioAcceso ha WHERE ha.codigoHorarioAccesoPk <> 0 AND ha.estadoSalida = 0 ";   
        if ($strFechaHoy != ""){
            $dql .= " AND ha.fechaEntrada >= '". $strFechaHoy . " 00:00:00' AND ha.fechaEntrada <= '" . $strFechaHoy . " 23:59:59' ";
        }
        if ($strEmpleado != ""){
            $dql .= " AND ha.codigoEmpleadoFk = ". $strEmpleado;
        }
        $query = $em->createQuery($dql);
        $arEmpleadoEntrada = $query->getResult();
        return $arEmpleadoEntrada;
    }
    
    public function resumenEmpleado($strFechaDesde = "", $strFechaHasta = "") {        
        $em = $this->getEntityManager();
        $dql   = "SELECT ha.codigoEmpleadoFk, COUNT(ha.codigoHorarioAccesoPk) FROM BrasaRecursoHumanoBundle:RhuHorarioAcceso ha "
                . "WHERE  ha.fechaEntrada >= '". $strFechaDesde . " 00:00:00' AND ha.fechaEntrada <= '" . $strFechaHasta . " 23:59:59' "
                . "GROUP BY ha.codigoEmpleadoFk";   
                
        $query = $em->createQuery($dql);
        $arEmpleado = $query->getResult();
        return $arEmpleado;
    }    
    
    public function empleado($strFechaDesde = "", $strFechaHasta = "", $codigoEmpleado = "") {        
        $em = $this->getEntityManager();
        $dql   = "SELECT ha FROM BrasaRecursoHumanoBundle:RhuHorarioAcceso ha "
                . "WHERE  ha.fechaEntrada >= '". $strFechaDesde . " 00:00:00' AND ha.fechaEntrada <= '" . $strFechaHasta . " 23:59:59' "
                . "AND ha.codigoEmpleadoFk = " . $codigoEmpleado;                   
        $query = $em->createQuery($dql);
        $arEmpleado = $query->getResult();
        return $arEmpleado;
    }    
    
    public function validarIngreso($strFechaHoy = "", $strEmpleado= "") {          
        $em = $this->getEntityManager();
        $boolResultado = TRUE;
        $dql   = "SELECT ha FROM BrasaRecursoHumanoBundle:RhuHorarioAcceso ha "
                . "WHERE ha.fechaEntrada >= '". $strFechaHoy . " 00:00:00' AND ha.fechaEntrada <= '" . $strFechaHoy . " 23:59:59' "       
                . "AND ha.codigoEmpleadoFk = ". $strEmpleado;
        
        $query = $em->createQuery($dql);
        $arEmpleadoEntrada = $query->getResult();
        if(count($arEmpleadoEntrada) <= 0) {
            $boolResultado = FALSE;
        }
        return $boolResultado;
    }
    
    public function listaDql($strIdentificacion = "", $strNombre = "", $strDesde = "", $strHasta = "") {        
        $em = $this->getEntityManager();
        $dql   = "SELECT ha,e FROM BrasaRecursoHumanoBundle:RhuHorarioAcceso ha JOIN ha.empleadoRel e WHERE ha.codigoHorarioAccesoPk <> 0 ";   
        if($strIdentificacion != "") {
            $dql .= " AND e.numeroIdentificacion = " . $strIdentificacion;
        }   
        if($strNombre != "" ) {
            $dql .= " AND e.nombreCorto LIKE '%". $strNombre . "%'";
        }
        if ($strDesde != ""){
            $dql .= " AND ha.fechaEntrada >= '". date_format($strDesde, 'Y-m-d') . " 00:00:00'";
        }
        if($strHasta != "") {
            $dql .= " AND ha.fechaEntrada <= '". date_format($strHasta, 'Y-m-d') . " 23:59:59'";
        }
        $dql .= " ORDER BY ha.fechaEntrada";
        return $dql;
    }
    
    public function listaRegistradosDql($strIdentificacion = "", $strNombre = "", $strDesde = "", $strHasta = "") {        
        $em = $this->getEntityManager();
        $dql   = "SELECT ha,e FROM BrasaRecursoHumanoBundle:RhuHorarioAcceso ha JOIN ha.empleadoRel e WHERE ha.codigoHorarioAccesoPk <> 0 AND ha.estadoSalida = 1";   
        if($strIdentificacion != "") {
            $dql .= " AND e.numeroIdentificacion = " . $strIdentificacion;
        }   
        if($strNombre != "" ) {
            $dql .= " AND e.nombreCorto LIKE '%". $strNombre . "%'";
        }
        if ($strDesde != ""){
            $dql .= " AND ha.fechaEntrada >= '". date_format($strDesde, 'Y-m-d') . " 00:00:00'";
        }
        if($strHasta != "") {
            $dql .= " AND ha.fechaEntrada <= '". date_format($strHasta, 'Y-m-d') . " 23:59:59'";
        }
        $dql .= " ORDER BY ha.fechaEntrada";
        return $dql;
    }
    
    public function listaNoRegistradosDql($strIdentificacion = "", $strNombre = "", $strDesde = "", $strHasta = "") {        
        $em = $this->getEntityManager();
        $dql   = "SELECT ha,e FROM BrasaRecursoHumanoBundle:RhuHorarioAcceso ha JOIN ha.empleadoRel e WHERE ha.codigoHorarioAccesoPk <> 0 AND ha.estadoSalida = 0";   
        if($strIdentificacion != "") {
            $dql .= " AND e.numeroIdentificacion = " . $strIdentificacion;
        }   
        if($strNombre != "" ) {
            $dql .= " AND e.nombreCorto LIKE '%". $strNombre . "%'";
        }
        if ($strDesde != ""){
            $dql .= " AND ha.fechaEntrada >= '". date_format($strDesde, 'Y-m-d') . " 00:00:00'";
        }
        if($strHasta != "") {
            $dql .= " AND ha.fechaEntrada <= '". date_format($strHasta, 'Y-m-d') . " 23:59:59'";
        }
        $dql .= " ORDER BY ha.fechaEntrada";
        return $dql;
    }
    
    public function calculoHoras($strFechaDesde = "", $strFechaHasta = "", $codigoEmpleado = "") {        
        $em = $this->getEntityManager();
        
    }
    
}